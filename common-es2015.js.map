{"version":3,"sources":["./src/app/services/http/blog.service.ts","./src/app/services/middle/mblog.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA2C;AACmC;;;AAKvE,MAAM,WAAW;IAiBtB,YAAqB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAhBrC,kCAAkC;QAClC,QAAG,GAAG,kCAAkC,CAAC;IAeC,CAAC;IAb3C,iBAAiB,CAAC,KAAK;QACrB,QAAS,KAAK,CAAC,IAAI,EAAG;YACpB,KAAK,kEAAa,CAAC,IAAI;gBACvB,MAAM;YACN,KAAK,kEAAa,CAAC,cAAc;gBACjC,MAAM;YACN,KAAK,kEAAa,CAAC,gBAAgB;gBACnC,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAE,KAAK,CAAC,MAAM,GAAG,IAAI,CAAE,CAAC;gBACjD,MAAM;YACN,KAAK,kEAAa,CAAC,QAAQ;gBAC3B,OAAO,KAAK,CAAC,IAAI,CAAC;SACnB;IACH,CAAC;IAGD,KAAK;QACH,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,GAAG,uBAAuB,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;QACrG,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;;sEAtBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAyD;;;AAOlD,MAAM,YAAY;IAGvB,YAAqB,QAAqB;QAArB,aAAQ,GAAR,QAAQ,CAAa;QAF1C,cAAS,GAAG,IAAI,0DAAY,EAAO,CAAC;IAEW,CAAC;IAChD,IAAI;QACF,wBAAwB;QACxB,sBAAsB;QACtB,0CAA0C;QAC1C,YAAY;QACZ,IAAI;QACJ,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,CAAC,KAAqB,EAAE,EAAE;YACxD,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAClD,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,EAAC;gBACnB,oBAAoB;gBACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;wEAlBU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEventType } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n  // url = 'http://localhost:4200/';\n  url = 'https://offline-pixel.github.io/';\n\n  HttpEventResponse(event) {\n    switch ( event.type ) {\n      case HttpEventType.Sent:\n      break;\n      case HttpEventType.ResponseHeader:\n      break;\n      case HttpEventType.DownloadProgress:\n      const loaded = Math.round( event.loaded / 1024 );\n      break;\n      case HttpEventType.Response:\n      return event.body;\n    }\n  }\n  constructor( private http: HttpClient ) { }\n\n  sBlog() {\n    const request = new HttpRequest('GET', this.url + 'assets/json/blog.json', { reportProgress: true });\n    return this.http.request(request);\n  }\n\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { HttpEvent } from '@angular/common/http';\nimport { BlogService } from '../http/blog.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MblogService {\n  emitBlogs = new EventEmitter<any>();\n  cacheBlogs: any;\n  constructor( private httpBlog: BlogService ) { }\n  blog() {\n    // if (this.cacheBlogs){\n    //   console.log('2');\n    //   this.emitBlogs.emit(this.cacheBlogs);\n    //   return;\n    // }\n    this.httpBlog.sBlog().subscribe((event: HttpEvent<any>) => {\n      let _api = this.httpBlog.HttpEventResponse(event);\n      if (event.type === 4){\n        // console.log('1');\n        this.cacheBlogs = _api;\n        this.emitBlogs.emit(_api);\n      }\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}